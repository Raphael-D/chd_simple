{"version":3,"sources":["vanilla_scroll.js"],"names":["window","addEventListener","smoothScroll","element","begin","change","clearInterval","timer","start","Date","now","setInterval","time","speed","tgOffsetY","result","duration","Math","pow","easeOut","posY","scrollTop","fps","tgGet","aHref","nowPos","tgID","replace","tgElem","document","getElementById","tgOffset","getBoundingClientRect","top","scrollVal","adjust","stopScroll","clear","clearTimeout","ua","navigator","userAgent","toLowerCase","dom","body","documentElement","scrollingElement","indexOf","a","getElementsByTagName","elemArr","length","i","onclick","event","elem","this","getAttribute","search","preventDefault","pageYOffset","hrefSplit","split","hrefFirst","hrefLast","pathSplit","location","pathname","pathSplitLast","hostName","hostname","check1","match","aHrefCheck","undefined","setAttribute","url","href","urlSplit","anchorLink","setTimeout","history","replaceState"],"mappings":"AAAAA,OAAOC,iBAAiB,mBAAoB,WAoC1C,SAASC,EAAaC,EAASC,EAAOC,GACpCC,cAAcC,GACd,IAAIC,EAAQC,KAAKC,MACjBH,EAAQP,OAAOW,YAAY,WACzB,IAAIC,GAAQH,KAAKC,MAAQF,IAAUK,GAASC,GAAaA,EAAY,KACnEC,EAdN,SAAiBH,EAAMI,GACrB,OAAO,EAAIC,KAAKC,IAAI,EAAKN,EAAOI,EAAW,GAa9BG,CAAQP,EAAMI,GACvBI,EAAOhB,EAAQW,EAASV,EAC1BF,EAAQkB,UAAYD,EAChBR,GAAQI,GACVV,cAAcC,IAEfe,GAGL,SAASC,EAAMC,EAAOC,GACpBC,EAAOF,EAAMG,QAAQ,IAAK,IAC1BC,EAASC,SAASC,eAAeJ,GACjCK,EAAWH,EAAOI,wBAClBlB,EAAYiB,EAASE,IACrB/B,EAAagC,IAAaT,EAAQX,EAAYqB,GA4EhD,SAASC,IACP,SAASC,IACPC,aAAa/B,GAEfsB,SAAS5B,iBAAiB,aAAcoC,GACxCR,SAAS5B,iBAAiB,YAAaoC,GACvCR,SAAS5B,iBAAiB,QAASoC,GAvIrC,IAAIxB,EAAQ,IACVS,EAAM,EACNN,EAAW,EACXmB,EAAS,GAGPD,EAAY,WAEd,IAAIK,EAAKC,UAAUC,UAAUC,cACzBC,EACId,SAASe,KADbD,EAEId,SAASgB,gBAFbF,EAGId,SAASiB,iBAEjB,OAAgC,GAAzBP,EAAGQ,QAAQ,UAAkBJ,GACT,GAAzBJ,EAAGQ,QAAQ,UAAkBJ,GACN,GAAvBJ,EAAGQ,QAAQ,QAAgBJ,GACJ,GAAvBJ,EAAGQ,QAAQ,QAAgBJ,GACD,GAA1BJ,EAAGQ,QAAQ,WAAmBJ,GACN,GAAxBJ,EAAGQ,QAAQ,SAAiBJ,GACJ,GAAxBJ,EAAGQ,QAAQ,SAAiBJ,GACP,GAArBJ,EAAGQ,QAAQ,MAAcJ,EAAWA,GAQpCpC,GACFD,cAAcC,GA4BhB,IA1BA,IAAIA,EAeAmB,EAAME,EAAQG,EAAUjB,EAQxBkC,EAAInB,SAASoB,qBAAqB,KACpCC,EAAUF,EAAEG,OACZC,EAAI,EACCA,EAAIF,GACTF,EAAEI,GAAGC,QAAU,SAASC,GAEtB,IAAIC,EAAOC,KACThC,EAAQgC,KAAKC,aAAa,QAE5B,GAAe,IADJjC,EAAMkC,OAAO,QAEtBJ,EAAMK,iBACNpC,EAAMC,EAAOxB,OAAO4D,aACpBxB,QACK,CACL,IAAIyB,EAAYrC,EAAMsC,MAAM,KAC1BC,EAAYF,EAAU,GACtBG,EAAW,IAAMH,EAAU,GAE3BI,EADWC,SAASC,SACCL,MAAM,MAC3BM,EAAgBH,EAAUA,EAAUd,OAAS,GAC7CkB,EAAWH,SAASI,SA2BtB,IAAqB,IA1BrB,WACE,IAAIC,EAASR,EAAUS,MAAM,wBAC7B,OAAe,OAAXD,IAIa,GADFA,EAAO,GAAGxB,QAAQsB,GAqB/BI,GAGF,QAfqC,IAAjCV,EAAUhB,QAAQsB,KAA0D,IAAtCN,EAAUhB,QAAQqB,KAG1DJ,EAAWA,EAASrC,QAAQ,IAAK,QACjCH,EAAQuC,EAAYC,OACCU,IAAjBb,EAAU,IACZN,EAAKoB,aAAa,OAAQnD,MAapC4B,GAAS,EAEX,IAAIwB,EAAMV,SAASW,KAEnB,IAAqB,IADLD,EAAI7B,QAAQ,QAC5B,CAGE,IAAI+B,EAAWF,EAAId,MAAM,SACvBiB,EAAa,IAAMD,EAASA,EAAS3B,OAAS,GAChD6B,WACE,WACEzD,EAAMwD,EAAY/E,OAAO4D,aACzBxB,KACC,KAIL4C,WAHe,WACbhF,OAAOiF,QAAQC,aAAa,KAAM,KAAMJ,EAAS,KAE9B","file":"../js/vanilla_scroll.min.js","sourcesContent":["window.addEventListener('DOMContentLoaded', function() {\n  /* === options === */\n  var speed = 800, //scrollにかかる時間、距離が伸びると相対的に少しずつ遅くなる\n    fps = 8, //フレームレート16=60fps,24=30fps\n    duration = 1,\n    adjust = 40;\n  /* === END options === */\n\n  var scrollVal = function() {\n    // JavaScriptエンジンで分岐\n    var ua = navigator.userAgent.toLowerCase();\n    var dom = {\n      body: document.body,\n      elem: document.documentElement,\n      scrl: document.scrollingElement\n    }\n    return ua.indexOf('chrome') != -1 ? dom.scrl\n    : ua.indexOf('safari') != -1 ? dom.body\n    : ua.indexOf('edge') != -1 ? dom.body\n    : ua.indexOf('msie') != -1 ? dom.body\n    : ua.indexOf('firefox') != -1 ? dom.elem\n    : ua.indexOf('opera') != -1 ? dom.body\n    : ua.indexOf('gecko') != -1 ? dom.elem\n    : ua.indexOf('ie') != -1 ? dom.elem : dom.body;\n  }\n\n  //easing関数作成\n  function easeOut(time, duration) {\n    return 1 - Math.pow(1 - (time / duration), 5); //5乗\n  }\n  //タイマー重複エスケープ\n  if (timer) {\n    clearInterval(timer);\n  }\n  var timer;\n  //smoothScroll関数, elementが取得先, beginが初期値, changeが変化量\n  function smoothScroll(element, begin, change) {\n    clearInterval(timer);//断続クリックエスケープのための初期化Restart\n    var start = Date.now();\n    timer = window.setInterval(function() {\n      var time = (Date.now() - start) / (speed * (tgOffsetY / (tgOffsetY / 3))),\n        result = easeOut(time, duration),\n        posY = begin + result * change;\n      element.scrollTop = posY;\n      if (time >= duration) { //指定の時間\n        clearInterval(timer);\n      }\n    }, fps);\n  }\n  var tgID, tgElem, tgOffset, tgOffsetY;\n  function tgGet(aHref, nowPos) {\n    tgID = aHref.replace('#', ''),\n    tgElem = document.getElementById(tgID),\n    tgOffset = tgElem.getBoundingClientRect(),\n    tgOffsetY = tgOffset.top;\n    smoothScroll(scrollVal(), nowPos, tgOffsetY - adjust);\n  }\n  var a = document.getElementsByTagName('a'),\n    elemArr = a.length,\n    i = 0;\n  while (i < elemArr) {\n    a[i].onclick = function(event) {\n\n      var elem = this,\n        aHref = this.getAttribute('href'), //hrefを取得\n        aCheck = aHref.search(/^#.+/); //先頭に#を含む場合は0を返す\n      if (aCheck === 0) { //先頭に#を含む時の処理\n        event.preventDefault();\n        tgGet(aHref, window.pageYOffset);\n        stopScroll();\n      } else { //先頭に#を含まない時の処理\n        var hrefSplit = aHref.split(/#/),\n          hrefFirst = hrefSplit[0],\n          hrefLast = '#' + hrefSplit[1],\n          pathName = location.pathname, //フラグメントパラメータは除外\n          pathSplit = pathName.split(/\\//), //\"/\"を区切りに配列\n          pathSplitLast = pathSplit[pathSplit.length - 1], //pathname配列の最後の値を代入\n          hostName = location.hostname; //ドメイン名\"localhost\"\n        function aHrefCheck() { //外部サイトか判断している\n          var check1 = hrefFirst.match(/https?:\\/\\/.[^\\/]+\\//);\n          if (check1 === null) { //絶対パスを含んでいない\n            return true;\n          } else {\n            var check2 = check1[0].indexOf(hostName);\n            if (check2 != -1) {\n              return true;\n            } else {\n              return false;\n            } // END IF\n          } // END IF\n        } // END aHrefCheck();\n        function aHrefChange() {\n          if (hrefFirst.indexOf(hostName) !== -1 || hrefFirst.indexOf(pathSplitLast) === -1) {\n            //クリックしたa要素のhref'xxx.html'にドメインがある時か、現在のURLと同じ'xxx.html'を含まない時\n            //同ドメインを含んでいるか、現在のurlと同じファイル名じゃない時\n            hrefLast = hrefLast.replace('#', '?id=');\n            aHref = hrefFirst + hrefLast; //xxx.html?id=exmpleを生成\n            if (hrefSplit[1] !== undefined) {\n              elem.setAttribute('href', aHref);\n            }\n          } else {\n            return; //現在のページと同じ時はhrefの変更は行わない\n          }\n        } // END aHrefChange();\n        if (aHrefCheck() === true) { //外部サイトじゃない時、\n          aHrefChange();\n        } else {\n          return;\n        }\n      } //END IF\n    } // END onclick\n    i = (i + 1);\n  } // END while\n  var url = location.href,\n    stringMatch = url.indexOf('?id=');\n  if (stringMatch === -1) { //IDが存在しない時\n    return;\n  } else { //IDが存在する\n    var urlSplit = url.split(/\\?id=/),\n      anchorLink = '#' + urlSplit[urlSplit.length - 1];\n    setTimeout(\n      function() {\n        tgGet(anchorLink, window.pageYOffset);\n        stopScroll();\n      }, 400);\n    var removeID = function() {\n      window.history.replaceState(null, null, urlSplit[0]);\n    }\n    setTimeout(removeID, 1400);\n  }\n  //ユーザーがタップしたりスクロールした時に停止させる\n  function stopScroll() {\n    function clear() {\n      clearTimeout(timer);\n    }\n    document.addEventListener('touchstart', clear);\n    document.addEventListener('touchmove', clear);\n    document.addEventListener('wheel', clear);\n  }\n});\n"]}